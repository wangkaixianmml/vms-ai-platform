import React, { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';
import { Card, Descriptions, Tag, Divider, Typography, Spin, Alert, Button, Space, Tabs } from 'antd';
import { 
  SecurityScanOutlined, 
  BugOutlined, 
  RobotOutlined, 
  ToolOutlined, 
  LineChartOutlined, 
  FileTextOutlined, 
  UserOutlined, 
  TeamOutlined 
} from '@ant-design/icons';
import AIChatTrigger from '../../components/ai/AIChatTrigger';
import vulnerabilityService from '../../services/vulnerabilityService';

const { Title, Paragraph } = Typography;
const { TabPane } = Tabs;

interface Asset {
  id: number;
  name: string;
  ip: string | null;
  type: string;
}

interface Vulnerability {
  id: number;
  name: string;
  cve_id: string | null;
  risk_level: string;
  description: string;
  affected_assets: Asset[];
  discovery_date: string;
  status: string;
  remediation_steps: string | null;
  
  // 新增字段
  vulnerability_type: string | null;
  vulnerability_url: string | null;
  responsible_person: string | null;
  department: string | null;
  first_found_date: string | null;
  latest_found_date: string | null;
  cvss_score: number | null;
  vpr_score: number | null;
  priority: string | null;
  fix_time_hours: number | null;
  
  // 详情字段
  impact_details: string | null;
  reproduction_steps: string | null;
  affected_components: string | null;
  impact_scope: string | null;
  fix_impact: string | null;
  references: string | null;
}

// 风险等级对应的颜色
const riskLevelColors: Record<string, string> = {
  '高': 'red',
  '中': 'orange',
  '低': 'green',
};

// 状态对应的颜色
const statusColors: Record<string, string> = {
  '待修复': 'red',
  '修复中': 'orange',
  '已修复': 'green',
  '已验证': 'blue',
};

const VulnerabilityDetail: React.FC = () => {
  const { id } = useParams<{ id: string }>();
  const [loading, setLoading] = useState(true);
  const [vulnerability, setVulnerability] = useState<Vulnerability | null>(null);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const fetchVulnerability = async () => {
      try {
        setLoading(true);
        console.log(`正在获取漏洞详情，ID: ${id}`);
        const data = await vulnerabilityService.getVulnerabilityById(id as string);
        console.log('获取到漏洞详情:', data);
        setVulnerability(data);
      } catch (err) {
        setError('获取漏洞详情时出错，请稍后重试');
        console.error(err);
      } finally {
        setLoading(false);
      }
    };

    if (id) {
      fetchVulnerability();
    }
  }, [id]);

  if (loading) {
    return (
      <div className="flex justify-center items-center h-64">
        <Spin size="large" tip="加载中..." />
      </div>
    );
  }

  if (error || !vulnerability) {
    return (
      <Alert
        message="错误"
        description={error || '未找到漏洞信息'}
        type="error"
        showIcon
      />
    );
  }

  // 格式化日期显示
  const formatDate = (dateStr: string | null) => {
    if (!dateStr) return '未知';
    return new Date(dateStr).toLocaleString();
  };

  return (
    <div>
      <div className="flex justify-between items-center mb-4">
        <Title level={2} className="m-0 flex items-center">
          <BugOutlined className="mr-2" />
          {vulnerability.name}
        </Title>
        
        {/* AI助手触发按钮 */}
        <AIChatTrigger 
          buttonText="获取修复建议" 
          tooltipText="使用AI获取针对该漏洞的修复建议"
          data={vulnerability}
          buttonType="primary"
        />
      </div>

      <Card>
        <Descriptions bordered column={2}>
          <Descriptions.Item label="风险等级">
            <Tag color={riskLevelColors[vulnerability.risk_level] || 'default'}>
              {vulnerability.risk_level}
            </Tag>
          </Descriptions.Item>
          <Descriptions.Item label="状态">
            <Tag color={statusColors[vulnerability.status] || 'default'}>
              {vulnerability.status}
            </Tag>
          </Descriptions.Item>
          <Descriptions.Item label="CVE编号">
            {vulnerability.cve_id || '无'}
          </Descriptions.Item>
          <Descriptions.Item label="漏洞类型">
            {vulnerability.vulnerability_type || '未分类'}
          </Descriptions.Item>
          <Descriptions.Item label="优先级">
            {vulnerability.priority ? (
              <Tag color={riskLevelColors[vulnerability.priority] || 'default'}>
                {vulnerability.priority}
              </Tag>
            ) : '未设置'}
          </Descriptions.Item>
          <Descriptions.Item label="发现日期">
            {formatDate(vulnerability.discovery_date)}
          </Descriptions.Item>
          <Descriptions.Item label="负责人">
            <UserOutlined /> {vulnerability.responsible_person || '未分配'}
          </Descriptions.Item>
          <Descriptions.Item label="所属部门">
            <TeamOutlined /> {vulnerability.department || '未分配'}
          </Descriptions.Item>
          <Descriptions.Item label="漏洞地址" span={2}>
            {vulnerability.vulnerability_url || '无'}
          </Descriptions.Item>
          <Descriptions.Item label="漏洞描述" span={2}>
            {vulnerability.description}
          </Descriptions.Item>
        </Descriptions>

        <Tabs defaultActiveKey="assets" className="mt-4">
          <TabPane 
            tab={<span><SecurityScanOutlined /> 影响资产</span>}
            key="assets"
          >
            {vulnerability.affected_assets.length > 0 ? (
              <div>
                {vulnerability.affected_assets.map((asset) => (
                  <Tag key={asset.id} className="mb-2 mr-2 p-1">
                    {asset.name} {asset.ip && `(${asset.ip})`} - {asset.type}
                  </Tag>
                ))}
              </div>
            ) : (
              <Paragraph className="text-gray-500">无影响资产信息</Paragraph>
            )}
          </TabPane>
          
          <TabPane 
            tab={<span><ToolOutlined /> 修复信息</span>}
            key="remediation"
          >
            <Card title="修复方案" className="mb-4">
              {vulnerability.remediation_steps ? (
                <Paragraph>{vulnerability.remediation_steps}</Paragraph>
              ) : (
                <Space direction="vertical" className="w-full">
                  <Paragraph className="text-gray-500">当前无修复方案</Paragraph>
                  <AIChatTrigger 
                    buttonText="询问AI获取修复建议" 
                    icon={<RobotOutlined />}
                    data={vulnerability}
                    buttonType="dashed"
                    size="small"
                  />
                </Space>
              )}
            </Card>
            
            <Card title="修复影响">
              {vulnerability.fix_impact ? (
                <Paragraph>{vulnerability.fix_impact}</Paragraph>
              ) : (
                <Paragraph className="text-gray-500">暂无修复影响信息</Paragraph>
              )}
            </Card>
            
            {vulnerability.fix_time_hours && (
              <div className="mt-4">
                <Tag color="blue">预计修复时长: {vulnerability.fix_time_hours} 小时</Tag>
              </div>
            )}
          </TabPane>
          
          <TabPane 
            tab={<span><LineChartOutlined /> 风险评估</span>}
            key="risk"
          >
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <Card title="CVSS评分">
                {vulnerability.cvss_score !== null ? (
                  <>
                    <div className="text-2xl font-bold mb-2">{vulnerability.cvss_score.toFixed(1)}/10</div>
                    <div>
                      {vulnerability.cvss_score >= 7.0 && <Tag color="red">严重</Tag>}
                      {vulnerability.cvss_score >= 4.0 && vulnerability.cvss_score < 7.0 && <Tag color="orange">中等</Tag>}
                      {vulnerability.cvss_score < 4.0 && <Tag color="green">低危</Tag>}
                    </div>
                  </>
                ) : (
                  <Paragraph className="text-gray-500">暂无CVSS评分</Paragraph>
                )}
              </Card>
              
              <Card title="VPR评分">
                {vulnerability.vpr_score !== null ? (
                  <>
                    <div className="text-2xl font-bold mb-2">{vulnerability.vpr_score.toFixed(1)}/10</div>
                    <div>
                      {vulnerability.vpr_score >= 7.0 && <Tag color="red">严重</Tag>}
                      {vulnerability.vpr_score >= 4.0 && vulnerability.vpr_score < 7.0 && <Tag color="orange">中等</Tag>}
                      {vulnerability.vpr_score < 4.0 && <Tag color="green">低危</Tag>}
                    </div>
                  </>
                ) : (
                  <Paragraph className="text-gray-500">暂无VPR评分</Paragraph>
                )}
              </Card>
            </div>
            
            <Card title="漏洞危害" className="mt-4">
              {vulnerability.impact_details ? (
                <Paragraph>{vulnerability.impact_details}</Paragraph>
              ) : (
                <Paragraph className="text-gray-500">暂无危害详情</Paragraph>
              )}
            </Card>
            
            <Card title="影响范围" className="mt-4">
              {vulnerability.impact_scope ? (
                <Paragraph>{vulnerability.impact_scope}</Paragraph>
              ) : (
                <Paragraph className="text-gray-500">暂无影响范围信息</Paragraph>
              )}
            </Card>
          </TabPane>
          
          <TabPane 
            tab={<span><FileTextOutlined /> 技术详情</span>}
            key="technical"
          >
            <Card title="漏洞复现步骤" className="mb-4">
              {vulnerability.reproduction_steps ? (
                <Paragraph>
                  <pre style={{ whiteSpace: 'pre-wrap', fontFamily: 'inherit' }}>
                    {vulnerability.reproduction_steps}
                  </pre>
                </Paragraph>
              ) : (
                <Paragraph className="text-gray-500">暂无复现步骤</Paragraph>
              )}
            </Card>
            
            <Card title="影响组件" className="mb-4">
              {vulnerability.affected_components ? (
                <Paragraph>{vulnerability.affected_components}</Paragraph>
              ) : (
                <Paragraph className="text-gray-500">暂无影响组件信息</Paragraph>
              )}
            </Card>
            
            <Card title="参考资料">
              {vulnerability.references ? (
                <Paragraph>
                  <pre style={{ whiteSpace: 'pre-wrap', fontFamily: 'inherit' }}>
                    {vulnerability.references}
                  </pre>
                </Paragraph>
              ) : (
                <Paragraph className="text-gray-500">暂无参考资料</Paragraph>
              )}
            </Card>
          </TabPane>
          
          <TabPane 
            tab={<span><UserOutlined /> 发现历史</span>}
            key="history"
          >
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <Card title="首次发现时间">
                {vulnerability.first_found_date ? (
                  <div className="text-xl">{formatDate(vulnerability.first_found_date)}</div>
                ) : (
                  <Paragraph className="text-gray-500">未知首次发现时间</Paragraph>
                )}
              </Card>
              
              <Card title="最近发现时间">
                {vulnerability.latest_found_date ? (
                  <div className="text-xl">{formatDate(vulnerability.latest_found_date)}</div>
                ) : (
                  <Paragraph className="text-gray-500">未知最近发现时间</Paragraph>
                )}
              </Card>
            </div>
          </TabPane>
        </Tabs>
      </Card>
    </div>
  );
};

export default VulnerabilityDetail; 