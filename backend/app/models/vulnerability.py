from datetime import datetime
from typing import List, Optional
from pydantic import BaseModel, Field

class Asset(BaseModel):
    id: int
    name: str
    ip: Optional[str] = None
    type: str

class Vulnerability(BaseModel):
    id: int
    name: str
    cve_id: Optional[str] = None
    risk_level: str = Field(..., description="漏洞风险等级，例如：高、中、低")
    description: str
    affected_assets: List[Asset] = []
    discovery_date: datetime
    status: str = Field(..., description="漏洞状态，例如：待修复、修复中、已修复、已验证")
    remediation_steps: Optional[str] = None
    
class VulnerabilityCreate(BaseModel):
    name: str
    cve_id: Optional[str] = None
    risk_level: str
    description: str
    affected_assets: List[int] = []  # 资产ID列表
    remediation_steps: Optional[str] = None
    
class VulnerabilityUpdate(BaseModel):
    name: Optional[str] = None
    cve_id: Optional[str] = None
    risk_level: Optional[str] = None
    description: Optional[str] = None
    affected_assets: Optional[List[int]] = None
    status: Optional[str] = None
    remediation_steps: Optional[str] = None